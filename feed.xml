<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yugeeklab.github.io/</id><title>Yugeeklab</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2023-07-09T20:57:50+09:00</updated> <author> <name>Tae-Seong Yu</name> <uri>https://yugeeklab.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://yugeeklab.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://yugeeklab.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2023 Tae-Seong Yu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[번역] Go Style Decision 2</title><link href="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-decision-2/" rel="alternate" type="text/html" title="[번역] Go Style Decision 2" /><published>2023-07-09T20:53:35+09:00</published> <updated>2023-07-09T20:56:44+09:00</updated> <id>https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-decision-2/</id> <content src="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-decision-2/" /> <author> <name>Tae-Seong Yu</name> </author> <category term="golang" /> <summary> 반복 Go 소스 코드는 불필요한 반복을 피해야 합니다. 주로 보이는 실수는 불필요한 단어를 포함하거나 컨텍스트나 유형을 반복하는 것입니다. 코드 자체도 같거나 유사한 코드 세그먼트가 근접한 위치에서 여러 번 나타나면 불필요하게 반복적일 수 있습니다. 반복적인 이름은 다양한 형태로 나타날 수 있습니다. Package vs. exported symbol name exported symbol name을 지정할 때 패키지 이름은 항상 패키지 외부에서 가시적이므로 두 곳 사이의 중복 정보를 줄이거나 제거해야 합니다. 패키지가 하나의 유형만 내보내고 해당 유형이 패키지 자체의 이름으로 지정된 경우, 생성자의 규범적인 이름은 필요한 경우 New입니다. 예시: 반복적인 이름 -&amp;gt; 더 나은 이름 ... </summary> </entry> <entry><title>[번역] Go Style Decision</title><link href="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-decision/" rel="alternate" type="text/html" title="[번역] Go Style Decision" /><published>2023-07-02T18:03:36+09:00</published> <updated>2023-07-02T18:13:00+09:00</updated> <id>https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-decision/</id> <content src="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-decision/" /> <author> <name>Tae-Seong Yu</name> </author> <category term="golang" /> <summary> 소개 이 문서에는 Go 가독성 멘토들의 제시한 조언에 대한 표준 가이드, 설명 및 예제를 통합 및 제공하기 위한 스타일 결정이 포함되어 있습니다. 이 문서는 완전한 것이 아니며 시간이 지남에 따라 계속해서 발전할 것입니다. 핵심 스타일 가이드와 여기에서 제공된 조언이 상충하는 경우 스타일 가이드가 우선하며 이 문서는 그에 맞게 업데이트되어야 합니다. 전체 Go 스타일 문서 세트는 개요를 참조하세요. 다음 섹션은 스타일 결정에서 스타일 가이드의 다른 부분으로 이동되었습니다: MixedCaps: guide#mixed-caps 참조 Formatting: guide#formatting 참조 Line Length: guide#line-length 참조 네이밍 네이밍에 대한 개요는 핵심 스타일 가... </summary> </entry> <entry><title>[번역] Go Style Guide 2</title><link href="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-guide-2/" rel="alternate" type="text/html" title="[번역] Go Style Guide 2" /><published>2023-06-18T12:20:07+09:00</published> <updated>2023-06-18T12:28:30+09:00</updated> <id>https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-guide-2/</id> <content src="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-guide-2/" /> <author> <name>Tae-Seong Yu</name> </author> <category term="golang" /> <summary> 간결성 간결한 Go 코드는 노이즈 대비 신호가 높습니다. 네이밍과 구조를 통해 관련된 세부사항을 쉽게 파악할 수 있습니다. 주어진 시점에서 가장 중요한 세부사항을 도출하는 데 방해가 되는 요소가 많이 있습니다: 반복적인 코드 불필요한 구문 불투명한 이름 불필요한 추상화 공백 특히 반복적인 코드는 각각 거의 동일한 섹션들 간의 차이를 흐려지게 하며, 독자는 변경 사항을 찾기 위해 비슷한 코드 라인들을 시각적으로 비교해야 합니다. 테이블 기반 테스트는 각 반복의 중요한 세부사항에서 공통 코드를 간결하게 추출하는 좋은 예입니다. 그러나 테이블에 포함시킬 부분을 선택하는 것은 테이블의 이해하기 쉬움에 영향을 미칠 수 있습니다. 코드를 구조화하는 여러 가지 방법을 고려할 때, 가장... </summary> </entry> <entry><title>[번역] Go Style Guide</title><link href="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-guide/" rel="alternate" type="text/html" title="[번역] Go Style Guide" /><published>2023-06-04T16:24:06+09:00</published> <updated>2023-06-04T16:35:54+09:00</updated> <id>https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-guide/</id> <content src="https://yugeeklab.github.io/posts/%EB%B2%88%EC%97%AD-go-style-guide/" /> <author> <name>Tae-Seong Yu</name> </author> <category term="golang" /> <summary> 스타일 원칙 가독성이 좋은 Go 코드를 작성하는 방법을 요약한 몇 가지 원칙이 있습니다. 다음은 가독성이 좋은 코드의 특성입니다. 중요도순으로 나열합니다. 명확성: 독자의 입장에서코드의 목적과 이유가 명확합니다. 간결성: 코드는 가능한 간단한 방식으로 목표를 달성합니다. 간결성: 코드는 높은 신호 대 잡음 비율을 가집니다. 유지 보수성: 코드는 쉽게 유지 보수할 수 있도록 작성됩니다. 일관성: 코드는 Google 코드베이스 전체와 일관되게 작성됩니다. 명확성 가독성의 핵심 목표는 독자에게 명확한 코드를 제공하는 것입니다. 명확성은 주로 효과적인 이름 지정, 도움이 되는 주석 및 효율적인 코드 구성으로 달성됩니다. 명확성은 코드 작성자가 아닌 독자의 시각으로 볼 필요가 있... </summary> </entry> <entry><title>[golang 비동기 패턴] Pipeline 패턴</title><link href="https://yugeeklab.github.io/posts/golang-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%8C%A8%ED%84%B4-pipeline-%ED%8C%A8%ED%84%B4/" rel="alternate" type="text/html" title="[golang 비동기 패턴] Pipeline 패턴" /><published>2023-05-20T23:04:43+09:00</published> <updated>2023-05-20T23:04:43+09:00</updated> <id>https://yugeeklab.github.io/posts/golang-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%8C%A8%ED%84%B4-pipeline-%ED%8C%A8%ED%84%B4/</id> <content src="https://yugeeklab.github.io/posts/golang-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%8C%A8%ED%84%B4-pipeline-%ED%8C%A8%ED%84%B4/" /> <author> <name>Tae-Seong Yu</name> </author> <category term="golang" /> <summary> package main import "fmt" func worker(in chan int, do func(int) int) chan int { out := make(chan int) go func() { defer close(out) for i := range in { out &amp;lt;- do(i) } }() return out } func run(in chan int) chan int { for i := 0; i &amp;lt; 5; i++ { in = worker(in, func(num int) int { fmt.Println("Data process", num) return num + 1 }) } return in } func main() { in ... </summary> </entry> </feed>
